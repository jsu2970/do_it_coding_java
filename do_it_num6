import java.util.*;

public class num6 {
    public static void main(String arg[])
    {
        Scanner sc = new Scanner(System.in);

        System.out.print("자연수 입력: ");
        int num = sc.nextInt();

        long beforeTime = System.currentTimeMillis();  //시작 시간

        int count = 1;  //자연수 그 자체도 개수에 포함되므로 1에서부터 시작
        /*

        투 포인터 개념으로 시간 복잡도를 최소화함
        두 포인터 사이의 숫자를 다 합했을때 경우를 고려하면 됨
        자연수 > 사이의 합 -> end 인덱스를 이동시켜 값을 늘림
        자연수 < 사이의 합 -> start 인덱스를 이동시켜 값을 줄임
        자연수 = 사이의 합 -> count값을 1 증가시킴

        두 인덱스가 같아지면 반복문을 종료함
        */

        //start와 end가 가리키고 있는 범위는 sum에 더해진 상태임
        int start = 1, end = 1;
        int sum = 1;  //인덱스1의 값을 이미 더했다고 가정
        while (end < num) {
            if (num > sum) {  //구간 합보다 num이 큰 경우 end를 오른쪽으로 이동시켜 sum값 증가
                end++;
                sum += end;
            }
            else if (num < sum) {  //구간 합보다 num이 작은 경우 start를 오른쪽으로 이동시켜 sum값 감소
                sum -= start;
                start++;
            }
            else if (num == sum) {  //같은 경우 count를 1늘리고 end를 오른쪽으로 이동시켜 sum값을 증가시킴
                count++;
                end++;
                sum += end;
            }
            else {
                System.out.println("오류");
            }
            //System.out.println("start: " + start + ", end: " + end + ", sum: " + sum);  //디버깅용
        }

        System.out.println("연속된 숫자의 합이 입력값이 되는 개수: " + count);

        //총 걸린 시간을 계산하는 과정
        long afterTime = System.currentTimeMillis();
        System.out.println("총 소요 시간: " + (afterTime - beforeTime) / 1000 + "초");
    }
}
